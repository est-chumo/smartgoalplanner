{"ast":null,"code":"var _jsxFileName = \"/home/elvis/smartgoalplanner/src/components/dashboard.js\",\n  _s = $RefreshSig$();\n// src/components/Dashboard.js\nimport React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, PieChart, Pie, Cell } from 'recharts';\nimport ProgressBar from './ProgressBar';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  goals\n}) => {\n  _s();\n  const [timeframe, setTimeframe] = useState('all');\n  const [categoryFilter, setCategoryFilter] = useState('all');\n\n  // Calculate dashboard metrics\n  const totalGoals = goals.length;\n  const completedGoals = goals.filter(goal => goal.savedAmount >= goal.targetAmount).length;\n  const totalSaved = goals.reduce((sum, goal) => sum + goal.savedAmount, 0);\n  const totalTarget = goals.reduce((sum, goal) => sum + goal.targetAmount, 0);\n  const overallProgress = totalTarget > 0 ? totalSaved / totalTarget * 100 : 0;\n\n  // Filter goals based on timeframe and category\n  const filteredGoals = goals.filter(goal => {\n    const now = new Date();\n    const deadline = new Date(goal.deadline);\n    const timeDiff = deadline.getTime() - now.getTime();\n    const daysRemaining = timeDiff / (1000 * 3600 * 24);\n    const timeframeMatch = timeframe === 'all' || timeframe === 'month' && daysRemaining <= 30 || timeframe === 'year' && daysRemaining <= 365;\n    const categoryMatch = categoryFilter === 'all' || goal.category.toLowerCase() === categoryFilter.toLowerCase();\n    return timeframeMatch && categoryMatch;\n  });\n\n  // Prepare data for charts\n  const categoryData = goals.reduce((acc, goal) => {\n    const existingCategory = acc.find(item => item.name === goal.category);\n    if (existingCategory) {\n      existingCategory.value += goal.savedAmount;\n    } else {\n      acc.push({\n        name: goal.category,\n        value: goal.savedAmount\n      });\n    }\n    return acc;\n  }, []);\n  const progressData = filteredGoals.map(goal => ({\n    name: goal.name,\n    saved: goal.savedAmount,\n    remaining: Math.max(0, goal.targetAmount - goal.savedAmount),\n    progress: goal.savedAmount / goal.targetAmount * 100\n  }));\n\n  // Color palette for charts\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8', '#82CA9D'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Savings Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Timeframe:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: timeframe,\n          onChange: e => setTimeframe(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"All Goals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"month\",\n            children: \"Next 30 Days\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"year\",\n            children: \"Next Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Category:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: categoryFilter,\n          onChange: e => setCategoryFilter(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"All Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), [...new Set(goals.map(goal => goal.category))].map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: category,\n            children: category\n          }, category, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary-cards\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Goals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: totalGoals\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: completedGoals\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Saved\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", totalSaved.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Overall Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          progress: overallProgress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [overallProgress.toFixed(1), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-charts\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Savings by Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(PieChart, {\n            children: [/*#__PURE__*/_jsxDEV(Pie, {\n              data: categoryData,\n              cx: \"50%\",\n              cy: \"50%\",\n              labelLine: false,\n              outerRadius: 80,\n              fill: \"#8884d8\",\n              dataKey: \"value\",\n              label: ({\n                name,\n                percent\n              }) => `${name} ${(percent * 100).toFixed(0)}%`,\n              children: categoryData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                fill: COLORS[index % COLORS.length]\n              }, `cell-${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              formatter: value => [`$${value.toLocaleString()}`, 'Amount Saved']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Goal Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: progressData,\n            margin: {\n              top: 20,\n              right: 30,\n              left: 20,\n              bottom: 60\n            },\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"name\",\n              angle: -45,\n              textAnchor: \"end\",\n              height: 70\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              formatter: value => [`$${value.toLocaleString()}`, 'Amount']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"saved\",\n              name: \"Saved\",\n              fill: \"#82ca9d\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"remaining\",\n              name: \"Remaining\",\n              fill: \"#8884d8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recent-activity\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Recent Activity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredGoals.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)).slice(0, 5).map(goal => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"activity-name\",\n            children: goal.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"activity-amount\",\n            children: [\"$\", goal.savedAmount.toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n            progress: goal.savedAmount / goal.targetAmount * 100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this)]\n        }, goal.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"fsYKTDGEO/HoeStC+Dm81pTI34c=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","PieChart","Pie","Cell","ProgressBar","jsxDEV","_jsxDEV","Dashboard","goals","_s","timeframe","setTimeframe","categoryFilter","setCategoryFilter","totalGoals","length","completedGoals","filter","goal","savedAmount","targetAmount","totalSaved","reduce","sum","totalTarget","overallProgress","filteredGoals","now","Date","deadline","timeDiff","getTime","daysRemaining","timeframeMatch","categoryMatch","category","toLowerCase","categoryData","acc","existingCategory","find","item","name","value","push","progressData","map","saved","remaining","Math","max","progress","COLORS","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","Set","toLocaleString","toFixed","width","height","data","cx","cy","labelLine","outerRadius","fill","dataKey","label","percent","entry","index","formatter","margin","top","right","left","bottom","strokeDasharray","angle","textAnchor","sort","a","b","createdAt","slice","id","_c","$RefreshReg$"],"sources":["/home/elvis/smartgoalplanner/src/components/dashboard.js"],"sourcesContent":["// src/components/Dashboard.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, PieChart, Pie, Cell } from 'recharts';\r\nimport ProgressBar from './ProgressBar';\r\nimport '../index.css';\r\n\r\nconst Dashboard = ({ goals }) => {\r\n  const [timeframe, setTimeframe] = useState('all');\r\n  const [categoryFilter, setCategoryFilter] = useState('all');\r\n\r\n  // Calculate dashboard metrics\r\n  const totalGoals = goals.length;\r\n  const completedGoals = goals.filter(goal => goal.savedAmount >= goal.targetAmount).length;\r\n  const totalSaved = goals.reduce((sum, goal) => sum + goal.savedAmount, 0);\r\n  const totalTarget = goals.reduce((sum, goal) => sum + goal.targetAmount, 0);\r\n  const overallProgress = totalTarget > 0 ? (totalSaved / totalTarget) * 100 : 0;\r\n\r\n  // Filter goals based on timeframe and category\r\n  const filteredGoals = goals.filter(goal => {\r\n    const now = new Date();\r\n    const deadline = new Date(goal.deadline);\r\n    const timeDiff = deadline.getTime() - now.getTime();\r\n    const daysRemaining = timeDiff / (1000 * 3600 * 24);\r\n    \r\n    const timeframeMatch = \r\n      timeframe === 'all' ||\r\n      (timeframe === 'month' && daysRemaining <= 30) ||\r\n      (timeframe === 'year' && daysRemaining <= 365);\r\n    \r\n    const categoryMatch = \r\n      categoryFilter === 'all' || \r\n      goal.category.toLowerCase() === categoryFilter.toLowerCase();\r\n    \r\n    return timeframeMatch && categoryMatch;\r\n  });\r\n\r\n  // Prepare data for charts\r\n  const categoryData = goals.reduce((acc, goal) => {\r\n    const existingCategory = acc.find(item => item.name === goal.category);\r\n    if (existingCategory) {\r\n      existingCategory.value += goal.savedAmount;\r\n    } else {\r\n      acc.push({ name: goal.category, value: goal.savedAmount });\r\n    }\r\n    return acc;\r\n  }, []);\r\n\r\n  const progressData = filteredGoals.map(goal => ({\r\n    name: goal.name,\r\n    saved: goal.savedAmount,\r\n    remaining: Math.max(0, goal.targetAmount - goal.savedAmount),\r\n    progress: (goal.savedAmount / goal.targetAmount) * 100\r\n  }));\r\n\r\n  // Color palette for charts\r\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8', '#82CA9D'];\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h2>Savings Dashboard</h2>\r\n      \r\n      {/* Filters */}\r\n      <div className=\"dashboard-filters\">\r\n        <div>\r\n          <label>Timeframe:</label>\r\n          <select value={timeframe} onChange={(e) => setTimeframe(e.target.value)}>\r\n            <option value=\"all\">All Goals</option>\r\n            <option value=\"month\">Next 30 Days</option>\r\n            <option value=\"year\">Next Year</option>\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label>Category:</label>\r\n          <select value={categoryFilter} onChange={(e) => setCategoryFilter(e.target.value)}>\r\n            <option value=\"all\">All Categories</option>\r\n            {[...new Set(goals.map(goal => goal.category))].map(category => (\r\n              <option key={category} value={category}>{category}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Summary Cards */}\r\n      <div className=\"summary-cards\">\r\n        <div className=\"summary-card\">\r\n          <h3>Total Goals</h3>\r\n          <p>{totalGoals}</p>\r\n        </div>\r\n        <div className=\"summary-card\">\r\n          <h3>Completed</h3>\r\n          <p>{completedGoals}</p>\r\n        </div>\r\n        <div className=\"summary-card\">\r\n          <h3>Total Saved</h3>\r\n          <p>${totalSaved.toLocaleString()}</p>\r\n        </div>\r\n        <div className=\"summary-card\">\r\n          <h3>Overall Progress</h3>\r\n          <ProgressBar progress={overallProgress} />\r\n          <p>{overallProgress.toFixed(1)}%</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Charts */}\r\n      <div className=\"dashboard-charts\">\r\n        <div className=\"chart-container\">\r\n          <h3>Savings by Category</h3>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <PieChart>\r\n              <Pie\r\n                data={categoryData}\r\n                cx=\"50%\"\r\n                cy=\"50%\"\r\n                labelLine={false}\r\n                outerRadius={80}\r\n                fill=\"#8884d8\"\r\n                dataKey=\"value\"\r\n                label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\r\n              >\r\n                {categoryData.map((entry, index) => (\r\n                  <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                ))}\r\n              </Pie>\r\n              <Tooltip formatter={(value) => [`$${value.toLocaleString()}`, 'Amount Saved']} />\r\n            </PieChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n\r\n        <div className=\"chart-container\">\r\n          <h3>Goal Progress</h3>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart\r\n              data={progressData}\r\n              margin={{ top: 20, right: 30, left: 20, bottom: 60 }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" angle={-45} textAnchor=\"end\" height={70} />\r\n              <YAxis />\r\n              <Tooltip formatter={(value) => [`$${value.toLocaleString()}`, 'Amount']} />\r\n              <Legend />\r\n              <Bar dataKey=\"saved\" name=\"Saved\" fill=\"#82ca9d\" />\r\n              <Bar dataKey=\"remaining\" name=\"Remaining\" fill=\"#8884d8\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Recent Activity */}\r\n      <div className=\"recent-activity\">\r\n        <h3>Recent Activity</h3>\r\n        <ul>\r\n          {filteredGoals\r\n            .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))\r\n            .slice(0, 5)\r\n            .map(goal => (\r\n              <li key={goal.id}>\r\n                <span className=\"activity-name\">{goal.name}</span>\r\n                <span className=\"activity-amount\">${goal.savedAmount.toLocaleString()}</span>\r\n                <ProgressBar progress={(goal.savedAmount / goal.targetAmount) * 100} />\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}