{"ast":null,"code":"var _jsxFileName = \"/home/elvis/smartgoalplanner/src/components/DepositForm.js\",\n  _s = $RefreshSig$();\n// components/DepositForm.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DepositForm({\n  goalId,\n  onDeposit,\n  maxAmount\n}) {\n  _s();\n  const [amount, setAmount] = useState('');\n  const [error, setError] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!amount || isNaN(amount) || Number(amount) <= 0) {\n      setError('Please enter a valid positive amount');\n      return;\n    }\n    if (Number(amount) > maxAmount) {\n      setError(`Amount exceeds remaining goal by $${Number(amount) - maxAmount}`);\n      return;\n    }\n    onDeposit(amount);\n    setAmount('');\n    setError('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"deposit-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Deposit Amount ($):\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: amount,\n        onChange: e => setAmount(e.target.value),\n        min: \"0.01\",\n        step: \"0.01\",\n        max: maxAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Deposit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(DepositForm, \"sgle4TT/+amTU4ZSik+1NAdkoss=\");\n_c = DepositForm;\nexport default DepositForm;\nvar _c;\n$RefreshReg$(_c, \"DepositForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DepositForm","goalId","onDeposit","maxAmount","_s","amount","setAmount","error","setError","handleSubmit","e","preventDefault","isNaN","Number","className","onSubmit","children","type","value","onChange","target","min","step","max","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/elvis/smartgoalplanner/src/components/DepositForm.js"],"sourcesContent":["// components/DepositForm.js\r\nimport React, { useState } from 'react';\r\n\r\nfunction DepositForm({ goalId, onDeposit, maxAmount }) {\r\n  const [amount, setAmount] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!amount || isNaN(amount) || Number(amount) <= 0) {\r\n      setError('Please enter a valid positive amount');\r\n      return;\r\n    }\r\n    if (Number(amount) > maxAmount) {\r\n      setError(`Amount exceeds remaining goal by $${Number(amount) - maxAmount}`);\r\n      return;\r\n    }\r\n    onDeposit(amount);\r\n    setAmount('');\r\n    setError('');\r\n  };\r\n\r\n  return (\r\n    <form className=\"deposit-form\" onSubmit={handleSubmit}>\r\n      <label>\r\n        Deposit Amount ($):\r\n        <input\r\n          type=\"number\"\r\n          value={amount}\r\n          onChange={(e) => setAmount(e.target.value)}\r\n          min=\"0.01\"\r\n          step=\"0.01\"\r\n          max={maxAmount}\r\n        />\r\n      </label>\r\n      <button type=\"submit\">Add Deposit</button>\r\n      {error && <p className=\"error\">{error}</p>}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default DepositForm;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,WAAWA,CAAC;EAAEC,MAAM;EAAEC,SAAS;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACrD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMY,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACN,MAAM,IAAIO,KAAK,CAACP,MAAM,CAAC,IAAIQ,MAAM,CAACR,MAAM,CAAC,IAAI,CAAC,EAAE;MACnDG,QAAQ,CAAC,sCAAsC,CAAC;MAChD;IACF;IACA,IAAIK,MAAM,CAACR,MAAM,CAAC,GAAGF,SAAS,EAAE;MAC9BK,QAAQ,CAAC,qCAAqCK,MAAM,CAACR,MAAM,CAAC,GAAGF,SAAS,EAAE,CAAC;MAC3E;IACF;IACAD,SAAS,CAACG,MAAM,CAAC;IACjBC,SAAS,CAAC,EAAE,CAAC;IACbE,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,oBACET,OAAA;IAAMe,SAAS,EAAC,cAAc;IAACC,QAAQ,EAAEN,YAAa;IAAAO,QAAA,gBACpDjB,OAAA;MAAAiB,QAAA,GAAO,qBAEL,eAAAjB,OAAA;QACEkB,IAAI,EAAC,QAAQ;QACbC,KAAK,EAAEb,MAAO;QACdc,QAAQ,EAAGT,CAAC,IAAKJ,SAAS,CAACI,CAAC,CAACU,MAAM,CAACF,KAAK,CAAE;QAC3CG,GAAG,EAAC,MAAM;QACVC,IAAI,EAAC,MAAM;QACXC,GAAG,EAAEpB;MAAU;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACR5B,OAAA;MAAQkB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACzCpB,KAAK,iBAAIR,OAAA;MAAGe,SAAS,EAAC,OAAO;MAAAE,QAAA,EAAET;IAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEX;AAACvB,EAAA,CApCQJ,WAAW;AAAA4B,EAAA,GAAX5B,WAAW;AAsCpB,eAAeA,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}